{"version":3,"sources":["Square.js","Board.js","Game.js","utils.js","swipeDetect.js","serviceWorker.js","index.js"],"names":["Square","id","className","Board","initialArr","n","arr","style","gridTemplateColumns","repeat","tab","i","j","push","key","DIR","constructCorrectArray","Array","fill","map","_","array","length","Math","floor","random","temp","shuffleArray","x","y","newArr","splice","inversions","current","y2","toCheck","console","log","isEvenPermutation","Game","props","slice","state","emptyCell","moves","$","document","keydown","e","a","move","which","el","callback","swipedir","startX","startY","distX","distY","startTime","touchsurface","handleswipe","addEventListener","preventDefault","touchobj","changedTouches","pageX","pageY","Date","getTime","abs","swipeDetect","bind","this","setState","direction","undefined","animate","onClick","resetGame","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","css","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a7ce1d86.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Square({ id }) {\n    return <div className=\"board-cell\" id={id}>{id}</div>;\n}\nexport default Square;","import React from 'react';\nimport Square from './Square';\n\nfunction Board({ n, arr }) {\n    const style = { gridTemplateColumns: (\"1fr \".repeat(n)) };\n    var tab = [];\n    for (var i = 0; i < n; i++) {\n        for (var j = 0; j < n; j++) {\n            tab.push(<Square key={arr[i][j]} id={arr[i][j]} />);\n        }\n    }\n    return (\n        <main className=\"board\" style={style}> {tab} </main>\n    );\n}\n\nexport default Board;","import $ from 'jquery';\nimport React, { Component } from 'react';\nimport Board from './Board';\nimport { swipeDetect } from './swipeDetect';\nimport { DIR, constructCorrectArray } from './utils';\nimport { FaUndo, FaBars } from 'react-icons/fa';\n\nconst duration = 100;\nvar initialArr;\n\nclass Game extends Component {\n    constructor(props) {\n        super(props);\n\n        const n = this.props.n\n        const arr = constructCorrectArray(n);\n        initialArr = arr.map(x => x.slice());\n        this.state = {\n            n: n,\n            arr: arr,\n            emptyCell: {\n                x: 0,\n                y: 0\n            },\n            moves: 0\n        }\n\n        $(document).keydown(async (e) => {\n            await this.move(e.which);\n        });\n\n        swipeDetect(document, this.move.bind(this));\n    }\n\n    resetGame(){\n        this.setState({\n            arr: initialArr.map(x => x.slice()),\n            emptyCell: {x:0, y:0},\n            moves: 0\n        });\n    }\n\n    async move(direction) {\n        var arr = this.state.arr;\n        var { x, y } = this.state.emptyCell;\n        var id;\n        try {\n            switch (direction) {\n                case DIR.UP:\n                    id = arr[x + 1][y];\n                    if (id === undefined) return;\n                    $(`#${id}`)[0].animate([{ \"top\": \"100%\" }, { \"top\": \"0%\" }], duration);\n                    var temp = arr[x][y];\n                    arr[x][y] = arr[x + 1][y];\n                    arr[x + 1][y] = temp;\n                    x++;\n                    break;\n                case DIR.RIGHT:\n                    id = arr[x][y - 1];\n                    if (id === undefined) return;\n                    $(`#${id}`)[0].animate([{ \"left\": \"-100%\" }, { \"left\": \"0%\" }], duration);\n                    temp = arr[x][y];\n                    arr[x][y] = arr[x][y - 1];\n                    arr[x][y - 1] = temp;\n                    y--;\n                    break;\n                case DIR.DOWN:\n                    id = arr[x - 1][y];\n                    if (id === undefined) return;\n                    $(`#${id}`)[0].animate([{ \"top\": \"-100%\" }, { \"top\": \"0%\" }], duration);\n                    temp = arr[x][y];\n                    arr[x][y] = arr[x - 1][y];\n                    arr[x - 1][y] = temp;\n                    x--;\n                    break;\n                case DIR.LEFT:\n                    id = arr[x][y + 1];\n                    if (id === undefined) return;\n                    $(`#${id}`)[0].animate([{ \"left\": `100%` }, { \"left\": \"0%\" }], duration);\n                    temp = arr[x][y];\n                    arr[x][y] = arr[x][y + 1];\n                    arr[x][y + 1] = temp;\n                    y++;\n                    break;\n                default:\n                    return;\n            }\n        } catch (err) {\n            console.log(err);\n            return;\n        }\n        this.setState({\n            emptyCell: { x, y },\n            arr: arr,\n            moves: this.state.moves + 1\n        });\n    }\n\n    render() {\n        const { moves, arr, n } = this.state;\n        return (\n            <>\n                <header>\n                    <div className=\"reset\" onClick={this.resetGame.bind(this)}><FaUndo /> Reset game</div>\n                    <div className=\"moves\">Moves: {moves}</div>\n                    <div className=\"menu\"><FaBars /> Menu</div>\n                </header>\n                <Board n={n} arr={arr} />\n            </>\n        )\n    }\n}\n\nexport default Game;","export const DIR = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n}\n\nconst shuffleArray = (array) => {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n\nconst isEvenPermutation = (array) => {\n    var inversions = 0;\n    const n = array.length;\n    for (var i = 0; i < n * n; i++) {\n        const [x, y] = [Math.floor(i / n), i % n];\n        const current = array[x][y];\n        if (current === 0) {\n            inversions += x;\n            continue;\n        }\n        for (var j = i + 1; j < n * n; j++) {\n            const [x2, y2] = [Math.floor(j / n), j % n];\n            const toCheck = array[x2][y2];\n            if (toCheck === 0) continue;\n            console.log(current, toCheck);\n            if (current > toCheck) inversions++;\n        }\n    }\n    return (inversions % 2) === 0;\n}\n\nexport const constructCorrectArray = (n) => {\n    var arr = new Array(n * n).fill(0).map((_, i) => i);\n    shuffleArray(arr);\n    const newArr = [];\n    while (arr.length) newArr.push(arr.splice(0, n));\n    arr = newArr;\n    var x, y;\n    for (var i = 0; i < n; i++) {\n        for (var j = 0; j < n; j++) {\n            if (arr[i][j] === 0) {\n                x = i;\n                y = j;\n            }\n        }\n    }\n    var temp = arr[0][0];\n    arr[0][0] = arr[x][y];\n    arr[x][y] = temp;\n    if (!isEvenPermutation(arr)) {\n        temp = arr[0][n-1];\n        arr[0][n-1] = arr[1][0];\n        arr[1][0] = temp;\n    }\n\n    return arr;\n}","import { DIR } from \"./utils\"\n\nexport const swipeDetect = (el, callback) => {\n    var touchsurface = el,\n        swipedir,\n        startX,\n        startY,\n        distX,\n        distY,\n        threshold = 15, //required min distance traveled to be considered swipe\n        restraint = 100, // maximum distance allowed at the same time in perpendicular direction\n        allowedTime = 3000, // maximum time allowed to travel that distance\n        elapsedTime,\n        startTime,\n        handleswipe = callback || function (swipedir) { };\n\n    touchsurface.addEventListener('touchstart', function (e) {\n        e.preventDefault();\n        var touchobj = e.changedTouches[0];\n        swipedir = 'none';\n        distX = 0;\n        distY = 0;\n        startX = touchobj.pageX;\n        startY = touchobj.pageY;\n        startTime = new Date().getTime(); // record time when finger first makes contact with surface\n        e.preventDefault();\n    }, false);\n\n    touchsurface.addEventListener('touchmove', function (e) {\n        e.preventDefault() // prevent scrolling when inside DIV\n    }, false);\n\n    touchsurface.addEventListener('touchend', function (e) {\n        e.preventDefault();\n        var touchobj = e.changedTouches[0]\n        distX = touchobj.pageX - startX // get horizontal dist traveled by finger while in contact with surface\n        distY = touchobj.pageY - startY // get vertical dist traveled by finger while in contact with surface\n        elapsedTime = new Date().getTime() - startTime // get time elapsed\n        if (elapsedTime <= allowedTime) { // first condition for awipe met\n            if (Math.abs(distX) >= threshold && Math.abs(distY) <= restraint) { // 2nd condition for horizontal swipe met\n                swipedir = (distX < 0) ? DIR.LEFT : DIR.RIGHT // if dist traveled is negative, it indicates left swipe\n            }\n            else if (Math.abs(distY) >= threshold && Math.abs(distX) <= restraint) { // 2nd condition for vertical swipe met\n                swipedir = (distY < 0) ? DIR.UP : DIR.DOWN // if dist traveled is negative, it indicates up swipe\n            }\n        }\n        handleswipe(swipedir)\n        e.preventDefault()\n    }, false);\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      \n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport './index.css';\nimport Game from './Game';\nimport * as serviceWorker from './serviceWorker';\n\nwindow.$ = $;\n\nconst n = 4;\n\nReactDOM.render(\n    <Game n={n}/>,\n    document.getElementById('root')\n);\n\n$(\"#0\").css({\"visibility\": \"hidden\", \"z-index\": \"-1\"});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}